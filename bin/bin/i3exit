#!/bin/sh

#partly taken from the Arch Wiki, extended by me.

active_lock() {
    echo test > $1
    if xrandr | grep '*' | grep '^   1366x768' >/dev/null
       then if xrandr | grep '*' | grep '^   1920x1080' >/dev/null
          then i3lock -n -d -i  $HOME/Pictures/noise-texture.png -t
       else i3lock -n -d -i $HOME/Pictures/262039-small.png
       fi
    else i3lock -n -d -i $HOME/Pictures/262039.png
    fi
    rm $1
}

export -f active_lock

lock() {
    if xrandr | grep '*' | grep '^   1366x768' >/dev/null
       then if xrandr | grep '*' | grep '^   1920x1080' >/dev/null
          then i3lock -d -i  $HOME/Pictures/noise-texture.png -t
       else i3lock -d -i $HOME/Pictures/262039-small.png
       fi
    else i3lock -d -i $HOME/Pictures/262039.png
    fi 
}

short_inactive_lock() {
	#xautolock
    #kill `ps | grep  xautolock | cut -f 1 --delimiter=\ `
    WATCHDOG_FILE=$(mktemp)
    NUM=0
    active_lock $WATCHDOG_FILE &
    while [ -f $WATCHDOG_FILE ] ; do
      sleep 60
      if [ $NUM == 3 ]; then
        systemctl suspend
      fi
      let NUM=1+$NUM
    done
}
inactive_lock() {
	#xautolock
    #kill `ps | grep  xautolock | cut -f 1 --delimiter=\ `
    WATCHDOG_FILE=$(mktemp)
    NUM=0
    active_lock $WATCHDOG_FILE &
    while [ -f $WATCHDOG_FILE ] ; do
      sleep 60
      if [ $NUM == 30 ]; then
        systemctl suspend
      fi
      let NUM=1+$NUM
    done
}

lock_without_sleep() {
    if xrandr | grep '*' | grep '^   1366x768' >/dev/null
       then if xrandr | grep '*' | grep '^   1920x1080' >/dev/null
          then i3lock -i  $HOME/Pictures/noise-texture.png -t
       else i3lock -i $HOME/Pictures/262039-small.png
       fi
    else i3lock -i $HOME/Pictures/262039.png
    fi
}


blur() {
   file1=$(mktemp --tmpdir i3lock-wrapper-XXXXXXXXXX.png)
   file2=$(mktemp --tmpdir i3lock-wrapper-XXXXXXXXXX.png)
   scrot -zd0 "$file1"
   convert "$file1" -blur 0x9 "$file2"
   i3lock -i "$file2" 
   trap "rm '$file1' '$file2'" EXIT
}

blur_with_sleep() {
   file1=$(mktemp --tmpdir i3lock-wrapper-XXXXXXXXXX.png)
   file2=$(mktemp --tmpdir i3lock-wrapper-XXXXXXXXXX.png)
   scrot -zd0 "$file1"
   convert "$file1" -blur 0x9 "$file2"
   i3lock -di "$file2" 
   trap "rm '$file1' '$file2'" EXIT

}

freeze() {
   file1=$(mktemp --tmpdir i3lock-wrapper-XXXXXXXXXX.png)
   scrot -d0 "$file1"
   i3lock -i "$file1"
   trap "rm '$file1'" EXIT
}

usage() {
   echo "Usage: $0 OPTION
OPTIONS:
  lock - Locks screen and puts the computer to sleep.
  inactive_lock - lock, but suspends computer after 30 minutes
  short_inactive_lock - inactive_lock, but 3m
  lock_without_sleep - locks screen but leaves the screen on
  blur - blurs screen
  blur_with_sleep - blurs screen but puts the computer to sleep
  freeze - freezes the screen
  logout - exits i3 (depends on i3-msg
  suspend - locks screen and suspends (depends on systemctl)
  hibernate - locks screen and suspends (depends on systemctl)
  reboot - reboots (depends on systemctl)
  shutdown - shutsdown (depends on systemctl)
  help - print this help and exit"
}
#262039.png

check_for_i3lock() {
		if [ $(strings /proc/$(pgrep i3lock)/environ | grep DISPLAY) = "DISPLAY=${DISPLAY}" ] ; then exit ; fi
}

case "$1" in
    lock)
        lock
        ;;
    lock_without_sleep)
        lock_without_sleep
        ;;
    blur)
        blur
        ;;
    blur_with_sleep)
        blur_with_sleep
        ;;
    freeze)
        freeze
        ;;
    logout)
        i3-msg exit
        ;;
    suspend)
        lock && systemctl suspend
        ;;
    hibernate)
        lock && systemctl hibernate
        ;;
    reboot)
        systemctl reboot
        ;;
    shutdown)
        systemctl poweroff
        ;;
    short_inactive_lock)
        short_inactive_lock
        ;;
    inactive_lock)
        inactive_lock
        ;;
	help)
	    usage
		;;
	i3exit)
		bash $0 "$2" "$3" "$4" "$5" "$6"
		exit $?
		;;
	"")
		usage
		exit 3
		;;
    *)
		echo "Invalid arguement"
		usage
        exit 2
esac

exit 0

